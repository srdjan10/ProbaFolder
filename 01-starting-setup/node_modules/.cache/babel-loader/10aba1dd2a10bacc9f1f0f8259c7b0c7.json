{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFirstAppReact\\\\01-starting-setup\\\\src\\\\components\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport classes from '../components/Card.module.css';\nimport Button from '../components/Button';\nimport classesToDo from '../components/ToDoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todolist = props => {\n  _s();\n\n  const [suggestions, setsuggestions] = useState('');\n\n  const suggestionsHandler = event => {\n    event.preventDefault();\n\n    if (suggestions.trim().length === 0) {\n      return;\n    }\n\n    console.log(suggestions);\n    setsuggestions('');\n  };\n\n  const suggestionsChangeHandler = event => {\n    setsuggestions(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classesToDo.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: suggestionsHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Enter your suggestions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        /* id=\"username\"\r\n        type=\"text\" */\n        value: suggestions,\n        onChange: suggestionsChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Todolist, \"1jmiwi5iVssPhX3lE7TOz0aWig0=\");\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["D:/MyFirstAppReact/01-starting-setup/src/components/ToDoList.js"],"names":["React","useState","Card","classes","Button","classesToDo","Todolist","props","suggestions","setsuggestions","suggestionsHandler","event","preventDefault","trim","length","console","log","suggestionsChangeHandler","target","value","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAD,IAAS;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,WAAW,CAACK,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAsC;AACpC;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAPD;;AAQA,QAAMQ,wBAAwB,GAAIN,KAAD,IAAW;AAC1CF,IAAAA,cAAc,CAACE,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,sBACA,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEd,WAAW,CAACe,KAA7B;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEV,kBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE;AACV;AACU,QAAA,KAAK,EAAEF,WAHT;AAIE,QAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAcD,CA5BD;;GAAMX,Q;;KAAAA,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport classes from '../components/Card.module.css';\r\nimport Button from '../components/Button'\r\nimport classesToDo from '../components/ToDoList.module.css'\r\n\r\nconst Todolist =(props)=>{\r\n  const [suggestions, setsuggestions] = useState('');\r\n  \r\n  const suggestionsHandler = (event) => {\r\n    event.preventDefault();\r\n    if (suggestions.trim().length === 0 ) {\r\n      return;\r\n    }\r\n    console.log(suggestions);\r\n    setsuggestions('');\r\n  };\r\n  const suggestionsChangeHandler = (event) => {\r\n    setsuggestions(event.target.value);\r\n  };\r\n  return(\r\n  <Card className={classesToDo.input}>\r\n      <form onSubmit={suggestionsHandler}>\r\n        <label htmlFor=\"username\">Enter your suggestions: </label>\r\n        <input\r\n          /* id=\"username\"\r\n          type=\"text\" */\r\n          value={suggestions}\r\n          onChange={suggestionsChangeHandler}\r\n        />\r\n        <Button type=\"submit\">Add suggestions</Button>\r\n      </form>\r\n    </Card>\r\n  )\r\n};\r\nexport default Todolist;"]},"metadata":{},"sourceType":"module"}