{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFirstAppReact\\\\01-starting-setup\\\\src\\\\components\\\\ListPeople.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"./Card\";\nimport classes from '../components/Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPeople = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applayData(data);\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: /*#__PURE__*/_jsxDEV(\"picture\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes['main-image'],\n        src: webp,\n        alt: \"Neki drugi poslovni svet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ListPeople, \"n5SlQVdc2sZg3OeT00ajYzBfpL0=\");\n\n_c = ListPeople;\nexport default ListPeople;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPeople\");","map":{"version":3,"sources":["D:/MyFirstAppReact/01-starting-setup/src/components/ListPeople.js"],"names":["React","Card","classes","ListPeople","isLoading","setIsLoading","useState","error","setError","tasks","setTasks","sendRequest","taskText","response","fetch","requestConfig","url","method","headers","body","JSON","stringify","ok","Error","data","json","applayData","loadedTasks","taskKey","push","id","text","err","message","card","webp"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAGA,MAAMC,UAAU,GAAE,MAAI;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMK,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtCP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACC,aAAa,CAACC,GAAf,EAAmB;AAC3CC,QAAAA,MAAM,EAACF,aAAa,CAACE,MADsB;AAE3CC,QAAAA,OAAO,EAACH,aAAa,CAACG,OAFqB;AAG3CC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,aAAa,CAACI,IAA7B;AAHsC,OAAnB,CAA5B;;AAKA,UAAI,CAACN,QAAQ,CAACS,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AACAC,MAAAA,UAAU,CAACF,IAAD,CAAV;AAEA,YAAMG,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBJ,IAAtB,EAA4B;AAC1BG,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,IAAI,EAAEP,IAAI,CAACI,OAAD,CAAJ,CAAcG;AAAnC,SAAjB;AACD;;AAEDrB,MAAAA,QAAQ,CAACiB,WAAD,CAAR;AACD,KApBD,CAoBE,OAAOK,GAAP,EAAY;AACZxB,MAAAA,QAAQ,CAACwB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACD5B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA3BD;;AA4BJ,sBACA,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACgC,IAAzB;AAAA,2BACA;AAAA,6BACQ;AAAK,QAAA,SAAS,EAAEhC,OAAO,CAAC,YAAD,CAAvB;AAAuC,QAAA,GAAG,EAAEiC,IAA5C;AAAkD,QAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAOC,CAvCD;;GAAMhC,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport classes from '../components/Card.module.css'\r\n\r\n\r\nconst ListPeople =()=>{\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n    const sendRequest = async (taskText) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(requestConfig.url,{\r\n            method:requestConfig.method,\r\n            headers:requestConfig.headers,\r\n            body:JSON.stringify(requestConfig.body)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Request failed!');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        applayData(data);\r\n  \r\n        const loadedTasks = [];\r\n  \r\n        for (const taskKey in data) {\r\n          loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n        }\r\n  \r\n        setTasks(loadedTasks);\r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    };\r\nreturn(\r\n<Card className={classes.card}>\r\n<picture>\r\n        <img className={classes['main-image']} src={webp} alt=\"Neki drugi poslovni svet...\"/>\r\n      </picture>\r\n</Card>\r\n);\r\n};\r\nexport default ListPeople;"]},"metadata":{},"sourceType":"module"}