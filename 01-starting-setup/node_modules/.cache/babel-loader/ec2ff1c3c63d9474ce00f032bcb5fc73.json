{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFirstAppReact\\\\01-starting-setup\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Lista from \"./components/Lista.js\";\nimport Todolist from \"./components/ToDoList\";\nimport ListPeopleHandler from \"./components/ListPeopleHandler\";\nimport Button from \"./components/Button\";\nimport Navigation from \"./components/Navigation\";\nimport Contact from \"./page/Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [suggestionslist, setsugestionslist] = useState([]);\n\n  const addsugestionhandler = sugest => {\n    setsugestionslist(prevlistsugestion => {\n      return [...prevlistsugestion, {\n        suggestions: sugest,\n        id: Math.random().toString()\n      }];\n    });\n  };\n\n  const [people, setPeople] = useState([]);\n\n  async function fetchPeopleHandler() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const data = await response.json();\n    console.log(data);\n    const transformedPeople = data.map(PeopleData => {\n      return {\n        id: PeopleData.id,\n        name: PeopleData.name,\n        username: PeopleData.username,\n        email: PeopleData.email\n      };\n    });\n    setPeople(transformedPeople);\n  }\n\n  ;\n  const [ip, setIP] = useState('');\n\n  const getData = async () => {\n    const res = await axios.get('https://geolocation-db.com/json/');\n    console.log(res.data);\n    setIP(res.data.IPv4);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Todolist, {\n        onToDolist: addsugestionhandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Lista, {\n      users: suggestionslist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchPeopleHandler,\n      children: \"IMPORT PEOPLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListPeopleHandler, {\n      peoples: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dVDZ63t0rzUL5EfmsiPkF93VGwo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/MyFirstAppReact/01-starting-setup/src/App.js"],"names":["React","Fragment","useState","Header","Lista","Todolist","ListPeopleHandler","Button","Navigation","Contact","App","suggestionslist","setsugestionslist","addsugestionhandler","sugest","prevlistsugestion","suggestions","id","Math","random","toString","people","setPeople","fetchPeopleHandler","response","fetch","data","json","console","log","transformedPeople","map","PeopleData","name","username","email","ip","setIP","getData","res","axios","get","IPv4","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,iBAAlB,IAAuCV,QAAQ,CAAC,EAAD,CAArD;;AACA,QAAMW,mBAAmB,GAAGC,MAAD,IAAU;AACnCF,IAAAA,iBAAiB,CAAEG,iBAAD,IAAqB;AACrC,aAAM,CAAC,GAAGA,iBAAJ,EAAuB;AAACC,QAAAA,WAAW,EAAEF,MAAd;AAAsBG,QAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAzB,OAAvB,CAAN;AACD,KAFgB,CAAjB;AAGD,GAJD;;AAKF,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AACC,iBAAeqB,kBAAf,GAAoC;AACjC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACE,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACE,UAAMI,iBAAiB,GAAGJ,IAAI,CAACK,GAAL,CAASC,UAAU,IAAI;AAC/C,aAAO;AACLf,QAAAA,EAAE,EAAEe,UAAU,CAACf,EADV;AAELgB,QAAAA,IAAI,EAAED,UAAU,CAACC,IAFZ;AAGLC,QAAAA,QAAQ,EAAEF,UAAU,CAACE,QAHhB;AAILC,QAAAA,KAAK,EAAEH,UAAU,CAACG;AAJb,OAAP;AAMD,KAPyB,CAA1B;AAQAb,IAAAA,SAAS,CAACQ,iBAAD,CAAT;AACL;;AAAA;AAEH,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcnC,QAAQ,CAAC,EAAD,CAA5B;;AAEA,QAAMoC,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,kCAAV,CAAlB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACb,IAAhB;AACAW,IAAAA,KAAK,CAACE,GAAG,CAACb,IAAJ,CAASgB,IAAV,CAAL;AACD,GAJD;;AAKDC,EAAAA,SAAS,CAAE,MAAM;AACdL,IAAAA,OAAO;AACR,GAFO,EAEL,EAFK,CAAT;AAGC,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACA,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEzB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEY,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,iBAAD;AAAmB,MAAA,OAAO,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA/CQX,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Lista from \"./components/Lista.js\";\nimport Todolist from \"./components/ToDoList\";\nimport ListPeopleHandler from \"./components/ListPeopleHandler\";\nimport Button from \"./components/Button\"; \nimport Navigation from \"./components/Navigation\";\nimport Contact from \"./page/Contact\";\n\n\nfunction App() {\n  const [suggestionslist, setsugestionslist] = useState([]);\n  const addsugestionhandler =(sugest)=>{\n    setsugestionslist((prevlistsugestion)=>{\n      return[...prevlistsugestion, {suggestions: sugest, id:Math.random().toString()},];\n    });\n  };\nconst [people, setPeople] = useState([]);\n async function fetchPeopleHandler() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      const data = await response.json();\n        console.log(data);\n          const transformedPeople = data.map(PeopleData => {\n            return {\n              id: PeopleData.id,\n              name: PeopleData.name,\n              username: PeopleData.username,\n              email: PeopleData.email,\n              };\n          });\n          setPeople(transformedPeople); \n    }; \n    \n  const [ip, setIP] = useState('');\n\n  const getData = async () => {\n    const res = await axios.get('https://geolocation-db.com/json/')\n    console.log(res.data);\n    setIP(res.data.IPv4)\n  }\n useEffect( () => {\n    getData()\n  }, [])  \n  return (\n    <Fragment>\n      <Header/>\n      <Navigation/>\n      <div>\n      <Todolist onToDolist={addsugestionhandler}/>\n      </div>\n      <Lista users={suggestionslist}/>\n      <Button onClick={fetchPeopleHandler}>IMPORT PEOPLE</Button>\n      <ListPeopleHandler peoples={people} \n      />\n\n    </Fragment>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}